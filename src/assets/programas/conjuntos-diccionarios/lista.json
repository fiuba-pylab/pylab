[
    {
        "id": 1,
        "title": "Frutas y cantidades",
        "description": "Uso de diccionario para contar la cantidad y variedad de frutas.",
        "difficulty": 2,
        "introduction": "<h4>Objetivo:</h4> Crear un diccionario donde cada tipo de fruta sea una clave y su valor sea la suma de todas las cantidades asociadas a ese tipo de fruta. Trabajamos con una lista de frutas, donde cada elemento es una cadena que combina el nombre de la fruta y una cantidad. El objetivo es procesar esta lista y obtener un diccionario que agrupe cada tipo de fruta, sumando sus cantidades respectivas. Para lograrlo, dividimos cada cadena, extraemos el nombre y la cantidad, y luego utilizamos un diccionario para almacenar y actualizar las cantidades. Este ejercicio es útil para comprender cómo manipular y estructurar datos, realizar operaciones aritméticas en diccionarios y verificar la existencia de claves en estructuras de datos.",
        "inputs": [
            {
                "name": "frutas",
                "options": [
                    "['manzana 3', 'banana 2', 'manzana 5', 'pera 1', 'banana 4']",
                    "['manzana 3', 'banana 2', 'manzana 5', 'pera 1', 'banana 4', 'pera 2']",
                    "['manzana 3', 'banana 2', 'manzana 5', 'pera 1', 'banana 4', 'pera 2', 'manzana 1']"
                ]
            }
        ]
    },
    {
        "id": 2,
        "title": "Contiene palabras",
        "description": "Agregamos palabras a un diccionario para luego iterarlo.",
        "difficulty": 1,
        "introduction": "<h4>Objetivo:</h4> Crear un diccionario llamado palabras para almacenar pares clave-valor, donde las claves son palabras y los valores son números asociados a cada palabra. Primero, asigna el valor 1 a la clave 'FIUBA' y 5 a la clave 'UBA'. Luego, usa la expresión 'UBA' in palabras para verificar si la clave 'UBA' existe en el diccionario, guardando el resultado (True o False) en la variable contieneFiuba. Posteriormente, incrementa el valor asociado a 'FIUBA' en 1, cambiándolo de 1 a 2. Finalmente, un bucle for recorre cada clave y valor del diccionario, imprimiendo ambos. En la salida, se muestra si 'UBA' está en el diccionario (True) y luego las claves y sus valores actualizados: 'FIUBA' 2 y 'UBA' 5.",
        "inputs": [
            {
                "name": "clave",
                "options": [
                    "FIUBA",
                    "UBA",
                    "FADU",
                    "FDUBA",
                    "BASTA"
                ]
            },
            {
                "name": "valor",
                "options": [
                    "1",
                    "5",
                    "3",
                    "7",
                    "10"
                ]
            }
        ]
    },
    {
        "id": 3,
        "title": "Operaciones con conjuntos",
        "description": "Realizar distintas operaciones entre dos conjuntos.",
        "difficulty": 2,
        "introduction": "<h4>Objetivo: A partir de dos conjuntos ingresados por el usuario, se calcula la diferencia simétrica, asimétricas, unión e intersección y se muestran los resultados por pantalla. <br> <br> <h4>Casos:</h4> 1. Conjunto A = {1, 2, 3, 4, 5}, Conjunto B = {4, 5, 6, 7, 8} <br> 2. Conjunto A = {1, 2, 3, 4, 5}, Conjunto B = {6, 7, 8, 9, 10} <br> 3. Conjunto A = {1, 2, 3, 4, 5}, Conjunto B = {1, 2, 3, 4, 5} <br> 4. Conjunto A = {1, 2, 3, 4, 5}, Conjunto B = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}",
        "inputs": [
            {
                "name": "A",
                "options": [
                    "1, 2, 3, 4, 5"
                ]
            },
            {
                "name": "B",
                "options": [
                    "4, 5, 6, 7, 8",
                    "6, 7, 8, 9, 10",
                    "1, 2, 3, 4, 5",
                    "1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
                ]
            }
        ]
    }, 
    {
        "id": 4,
        "title": "Ventas de un negocio",
        "description": "",
        "difficulty": 3,
        "introduction": "<h4>Objetivo:</h4>"
    }, 
    {
        "id": 5,
        "title": "Duplicados",
        "description": "",
        "difficulty": 3,
        "introduction": "<h4>Objetivo:</h4>"
    }, 
    {
        "id": 6,
        "title": "Operaciones con conjuntos 2",
        "description": "Palabras en comun y únicas entre 2 conjuntos.",
        "difficulty": 3,
        "introduction": "<h4>Objetivo:</h4> A partir de una lista de palabras que se guardan en un set, obtenemos las palabras únicas, es decir, las que están en un conjunto pero no en el otro, y aquellas que no están en ninguno. <br><br> <h4>Casos:</h4>",
        "inputs":[
            {
                "name": "frutas",
                "options": [
                    "manzana, ciruela, pera, naranja, uva",
                    "manzana, banana, pera, kiwi, uva",
                    "manzana, pera, kiwi, uva, naranja"
                ]
            }
        ]
    },
    {
        "id": 7,
        "title": "Contador de palabras",
        "description": "Contar la cantidad de veces que aparece cada palabra en un texto.",
        "difficulty": 3,
        "introduction": "<h4>Objetivo:</h4> Crear un diccionario que cuente la cantidad de veces que aparece cada palabra en un texto. Para lograrlo, dividimos el texto en palabras, eliminamos los signos de puntuación y las convertimos a minúsculas. Luego, recorremos cada palabra y actualizamos el diccionario, incrementando el valor asociado a la palabra.",
        "inputs": [
            {
                "name": "texto",
                "options": [
                    "'El perro come comida, el gato come pescado'",
                    "'El perro come comida, el gato come pescado, el loro come semillas'",
                    "'El perro come comida, el gato come pescado, el loro come semillas, el pez come alimento'"
                ]
            }
        ]
    },
    {
        "id": 8,
        "title": "Fibonacci con memorización",
        "description": "Calcular el n-ésimo término de la sucesión de Fibonacci con memorización.",
        "difficulty": 4,
        "introduction": "<h4>Objetivo:</h4> Calcular el n-ésimo término de la sucesión de Fibonacci con memorización. La memorización es una técnica que consiste en almacenar los resultados de cálculos previos para evitar repetirlos. En este caso, utilizamos un diccionario para almacenar los valores de Fibonacci ya calculados y evitar recalcularlos. Para calcular el n-ésimo término, verificamos si ya está en el diccionario y, si no, lo calculamos recursivamente y lo almacenamos para futuras consultas. Este enfoque mejora la eficiencia del cálculo de la sucesión de Fibonacci, evitando cálculos redundantes.",
        "inputs": [
            {
                "name": "n",
                "options": [
                    "5",
                    "10",
                    "15",
                    "20"
                ]
            }
        ]
    },
    {
        "id": 9,
        "title": "Secuencia Collatz",
        "description": "Calcular la secuencia de Collatz para un número dado.",
        "difficulty": 3,
        "introduction": "<h4>Objetivo:</h4> Calcular la secuencia de Collatz para un número dado. La secuencia de Collatz es una sucesión de números generada a partir de un número inicial n, siguiendo las siguientes reglas: <br> - Si n es par, el siguiente número es n/2. <br> - Si n es impar, el siguiente número es 3n + 1. <br> La secuencia termina cuando llega a 1. En este ejercicio, calculamos la secuencia de Collatz para un número dado y contamos la cantidad de términos generados hasta llegar a 1.",
        "inputs": [
            {
                "name": "n",
                "options": [
                    "5",
                    "10",
                    "15",
                    "20"
                ]
            }
        ]
    }

]